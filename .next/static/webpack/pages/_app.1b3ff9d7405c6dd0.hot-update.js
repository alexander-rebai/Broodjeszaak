"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./redux/cartSlice.js":
/*!****************************!*\
  !*** ./redux/cartSlice.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addProduct\": function() { return /* binding */ addProduct; },\n/* harmony export */   \"addSalad\": function() { return /* binding */ addSalad; },\n/* harmony export */   \"removeProduct\": function() { return /* binding */ removeProduct; },\n/* harmony export */   \"reset\": function() { return /* binding */ reset; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"./node_modules/mongoose/dist/browser.umd.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar _ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n// addProduct: (state, action) => {\n//     let temp = null;\n//     let extraKostBroodje;\n//     state.products?.map((item) => {\n//         if (item._id === action.payload._id){\n//             temp = item\n//         }\n//     });\n//     if (temp != null){\n//         if(state.products[state.products.indexOf(temp)].broodjesType === action.payload.broodjesType){\n//             state.quantities[state.products.indexOf(temp)] += parseInt(action.payload.quantity);\n//             state.products[state.products.indexOf(temp)].quantity = state.quantities[state.products.indexOf(temp)]\n//         }else{\n//             let bType;\n//             state.products?.map((item) => {\n//                 if (item._id === action.payload._id +1){\n//                     temp = item;\n//                     bType = \"bruin\";\n//                 }else if (item._id === action.payload._id +2){\n//                     temp = item;\n//                     bType = \"ciabatta\";\n//                 }\n//             });\n//             if (bType === \"bruin\"){\n//                 action.payload._id += 1;\n//                 state.quantities[state.products.indexOf(temp)] += parseInt(action.payload.quantity);\n//                 state.products[state.products.indexOf(temp)].quantity = state.quantities[state.products.indexOf(temp)]\n//             }else if (bType === \"ciabatta\"){\n//                 action.payload._id += 2;\n//                 state.quantities[state.products.indexOf(temp)] += parseInt(action.payload.quantity);\n//                 state.products[state.products.indexOf(temp)].quantity = state.quantities[state.products.indexOf(temp)]\n//             }else {\n//                 state.products.push(action.payload);\n//                 state.quantity += 1;\n//                 state.quantities[state.products.indexOf(action.payload)] = parseInt(action.payload.quantity);\n//             }\n//         }\n//     }\n//     else {\n//         state.products.push(action.payload);\n//         state.quantity += 1;\n//         state.quantities[state.products.indexOf(action.payload)] = parseInt(action.payload.quantity);\n//     }\n//     if (action.payload.type === \"broodje\"){\n//         if (action.payload.broodjesType === \"bruin (+€0.50)\"){\n//             extraKostBroodje = 0.50;\n//         }else if (action.payload.broodjesType === \"ciabatta (+€0.60)\"){\n//             extraKostBroodje = 0.60\n//         }else {\n//             extraKostBroodje = 0;\n//         }\n//     }\n//     state.total += (action.payload.price * action.payload.quantity) + (extraKostBroodje * action.payload.quantity);\n//     state.types[state.products.indexOf(action.payload)] = action.payload.type;\n// }\nvar cartSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"cart\",\n    initialState: {\n        products: [],\n        types: [],\n        quantities: [],\n        toggle: false,\n        quantity: 0,\n        total: 0,\n        saladItems: []\n    },\n    reducers: {\n        addProduct: function(state, action) {\n            var ref;\n            var temp = null;\n            var extraKostBroodje;\n            (ref = state.products) === null || ref === void 0 ? void 0 : ref.map(function(item) {\n                if (item._id === action.payload._id) {\n                    temp = item;\n                }\n            });\n            if (temp != null) {\n                state.quantities[state.products.indexOf(temp)] += parseInt(action.payload.quantity);\n                state.products[state.products.indexOf(temp)].quantity = state.quantities[state.products.indexOf(temp)];\n            } else {\n                state.products.push(action.payload);\n                state.quantity += 1;\n                state.quantities[state.products.indexOf(action.payload)] = parseInt(action.payload.quantity);\n            }\n            if (action.payload.type === \"broodje\") {\n                if (action.payload.broodjesType === \"bruin (+€0.50)\") {\n                    extraKostBroodje = 0.5;\n                } else if (action.payload.broodjesType === \"ciabatta (+€0.60)\") {\n                    extraKostBroodje = 0.6;\n                } else {\n                    extraKostBroodje = 0;\n                }\n            }\n            if (action.payload.type === \"broodje\") {\n                state.total += action.payload.price * action.payload.quantity + extraKostBroodje * action.payload.quantity;\n            } else {\n                state.total += action.payload.price * action.payload.quantity;\n            }\n            state.types[state.products.indexOf(action.payload)] = action.payload.type;\n        },\n        removeProduct: function(state, action) {\n            //state.products.map((item) => console.log({\"item\" : item.quantity}))\n            var counter = 0;\n            var multiple = 0;\n            var extraKostBroodje;\n            state.products = state.products.filter(function(item) {\n                if (item._id === action.payload._id) {\n                    counter++;\n                    multiple += item.quantity;\n                }\n                return item._id !== action.payload._id;\n            });\n            if (action.payload.type === \"broodje\") {\n                if (action.payload.broodjesType === \"bruin (+€0.50)\") {\n                    extraKostBroodje = 0.5;\n                } else if (action.payload.broodjesType === \"ciabatta (+€0.60)\") {\n                    extraKostBroodje = 0.6;\n                } else {\n                    extraKostBroodje = 0;\n                }\n            }\n            state.quantity -= counter;\n            state.total -= multiple * action.payload.price + multiple * extraKostBroodje;\n        },\n        addSalad: function(state, action) {\n            state.products.push(action.payload);\n            state.quantity += 1;\n            state.total += action.payload.price;\n            state.saladItems.push(action.payload.basis.concat(action.payload.groente, action.payload.proteine, action.payload.afwerking, action.payload.dressing));\n        },\n        reset: function(state) {\n            state.products = [];\n            state.quantity = 0;\n            state.total = 0;\n            state.toggle = !state.toggle;\n        }\n    }\n});\nvar _actions = cartSlice.actions;\nvar addProduct = _actions.addProduct, removeProduct = _actions.removeProduct, addSalad = _actions.addSalad, reset = _actions.reset;\n/* harmony default export */ __webpack_exports__[\"default\"] = (cartSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./redux/cartSlice.js\n"));

/***/ })

});